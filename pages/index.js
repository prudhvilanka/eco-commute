import Head from 'next/head'
import { useState } from 'react'
import styles from '../styles/Home.module.css'
import Card from './components/card'
import { MagnifyingGlass } from  'react-loader-spinner'
const App = ()=> {
  const [rate,setRate] = useState({})
  const [data,isData] = useState(false) 
  const [isloading,setIsloading] = useState(false)
  const [err,seterr] = useState(false)
  const handleSubmit = async (event) => {
    setIsloading(true)
    setRate({})
    seterr(false)
    event.preventDefault()
    const data = {
      current: event.target.current.value.toLowerCase(),
      destination: event.target.destination.value.toLowerCase(),
    }
    console.log(data)
    const JSONdata = JSON.stringify(data)
    const endpoint = '/api/search'
    const options = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSONdata,
    }
    try{
      const response = await fetch(endpoint, options)
      const result = await response.json()
      console.log(result)
      setRate(result)
      isData(true)
    }catch(err){
      seterr(true)
    }finally{
      setIsloading(false)
    }
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className={styles.main}>

        <h1 className={styles.title}>
          Welcome to <a href="/">Eco-Commute!</a>
        </h1>
        <div className={styles.forms}>
          <form onSubmit={handleSubmit}>

            <label htmlFor="current" >Current Location: </label>
            <input className={styles.inputbox} type="text" id="current" name="current" required />
          
            <label htmlFor="destination">Destination: </label>
            <input className={styles.inputbox} type="text" id="destination" name="destination" required />

            <button className={styles.submit}type="submit">Search</button>
          </form>
        </div>
        { isloading && <MagnifyingGlass
                        visible={true}
                        height="80"
                        width="80"
                        ariaLabel="MagnifyingGlass-loading"
                        wrapperStyle={{}}
                        wrapperClass="MagnifyingGlass-wrapper"
                        glassColor = '#c0efff'
                        color = '#0070f3'
                      />}
        {
          data && <Card rates={rate}/>
        }
        {
          err && <h2>No Data Available!!!</h2>
        }
      </main>
      
    </div>
    
  )
}

export default App