import Head from 'next/head'
import React,{ useState } from 'react'
import styles from '../styles/Home.module.css'
import Card from './components/card'
import Select from 'react-select';
import 'react-dropdown/style.css';
import { MagnifyingGlass } from  'react-loader-spinner'
import  DatePicker from 'react-datepicker'
import 'react-datepicker/dist/react-datepicker.css'

  const options = [
    { value: '1', label: 'One' },
    { value: '2', label: 'Two' },
    { value: '3', label: 'Three' },
  ];

const App = ()=> {
  const [selectedOption, setSelectedOption] = useState(options[0]);
  const [startDate,setStartDate] = useState(new Date());
  const [rate,setRate] = useState({})
  const [details,setDetails] = useState({})
  const [data,isData] = useState(false) 
  const [isloading,setIsloading] = useState(false)
  const [err,seterr] = useState(false)
  const handleSubmit = async (event) => {
    setIsloading(true)
    setRate({})
    seterr(false)
    event.preventDefault()
    const data = {
      current: event.target.current.value.toLowerCase(),
      destination: event.target.destination.value.toLowerCase(),
      date: startDate.getDate()
    }
    const nop= selectedOption.value
    const JSONdata = JSON.stringify(data)
    const endpoint = '/api/search'
    const options = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSONdata,
    }
    try{
      const response = await fetch(endpoint, options)
      const result = await response.json()

      Object.keys(result["rates"]).forEach((key)=>{
        result.rates[key]=nop*result.rates[key]
      })

      setRate(result["rates"])
      setDetails(result["details"])
      isData(true)
    }catch(err){
      seterr(true)
    }finally{
      setIsloading(false)
    }
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className={styles.main}>

        <h1 className={styles.title}>
          Welcome to <a href="/">Eco-Commute!</a>
        </h1>
        <div className={styles.forms}>
          <form onSubmit={handleSubmit}>

            <div>
            <label htmlFor="current">Current Location: </label>
            <input className={styles.inputbox} type="text" id="current" name="current" required />
          
            <label htmlFor="destination">Destination: </label>
            <input className={styles.inputbox} type="text" id="destination" name="destination" required />

            </div>
            <div>
            <label htmlFor="Date">Date: </label>
            <DatePicker className={styles.inputbox} selected={startDate} onChange=
              {(date) => setStartDate(date)} />
            <label htmlFor="current">No of Passengers: </label>
            <Select
            className={styles.inputbox}
            defaultValue={selectedOption}
            onChange={setSelectedOption}
            options={options}
            theme={(theme) => ({
              ...theme,
              borderRadius: 10,
              colors: {
              ...theme.colors,
              primary:'#0070f3'
              },
            })}
            />
            <button className={styles.submit}type="submit">Search</button>
            </div>
          </form>
        </div>
        { isloading && <MagnifyingGlass
                        visible={true}
                        height="80"
                        width="80"
                        ariaLabel="MagnifyingGlass-loading"
                        wrapperStyle={{}}
                        wrapperClass="MagnifyingGlass-wrapper"
                        glassColor = '#c0efff'
                        color = '#0070f3'
                      />}
        {
          data && <Card rates={rate} details={details}/>
        }
        {
          err && <h2>No Data Available!!!</h2>
        }
      </main>
      
    </div>
    
  )
}

export default App